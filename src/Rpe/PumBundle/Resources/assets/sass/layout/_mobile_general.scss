html, body{
    height: 100%;
}

.mobile {
// Main container
.mp-container {
    position: relative;
    overflow: hidden;
    height  : 100%;
    width   : 100%;
    padding : 0;
}

// Moving panel
.mp-pusher {
    position: relative;
    left    : 0;
}

// Used to simulate the fixed placement of the menu
// and left the content scrollable
.scroller {
    overflow-y: scroll;
    height    : 100%;
    position  : relative;

    .scroller-inner { position: relative; }
}

// The menu itself
.mp-left-panel,
.mp-right-panel {
    position   : absolute; // we can't use fixed here :(
    top        : 0;
    z-index    : 1;
    width      : 25.685%; // Set Sidebar width here
    height     : 100%;
    overflow-y : scroll;
}

.mp-open.mp-left-panel,
.mp-open.mp-right-panel {
    z-index    : 10;
    overflow-y : scroll;
}


// Right positioning spécific styles
.mp-right-panel {
    @include transform( translate3d( 100%, 0, 0 ) );
    right: 0;

    // All levels
    & > .mp-level {
        @include transform( translate3d( 100%, 0, 0 ) );
        right: 0;
    }

    // First level
    & > .mp-level,
    & > .mp-level.mp-level-open {
        @include transform( translate3d( 0, 0, 0 ) );
        box-shadow: none;
    }

    // Covers
    // ------
    // Opened level
    &.mp-cover .mp-level.mp-level-open { @include transform( translate3d( 0, 0, 0 ) ); }
    // Sublevel
    &.mp-cover .mp-level.mp-level-open .mp-level:not(.mp-level-open) { @include transform( translate3d( 100%, 0, 0 ) ); }
}

// Left positioning spécific styles
.mp-left-panel {
    @include transform( translate3d( -100%, 0, 0 ) );
    left: 0;

    // All levels
    & > .mp-level {
        @include transform( translate3d( -100%, 0, 0 ) );
        left: 0;
    }

    // First level
    & > .mp-level,
    & > .mp-level.mp-level-open {
        @include transform( translate3d( 0, 0, 0 ) );
        box-shadow: none;
    }

    // Covers
    &.mp-cover .mp-level.mp-level-open {
        @include transform( translate3d( 0, 0, 0 ) );
    }
    &.mp-cover .mp-level.mp-level-open .mp-level:not(.mp-level-open) { @include transform( translate3d( -100%, 0, 0 ) ); }
}

// Navigation level
.mp-level {
    position  : absolute; // Allow scroll inside every level
    overflow-y: scroll;

    &:after { z-index: -1; }

    // Overlay
    &.mp-level-overlay {
        cursor: pointer;

        &.mp-level::before {
            width     : 100%;
            height    : 100%;
            background: transparent;
            opacity   : 1;
        }
    }

    & > div {
        position: relative;
        display: block;
        width: 100%;
        height: auto;
    }
}

/* overlays for pusher and for level that gets covered */
.mp-pusher,
.mp-level {
    @include transition ( all 0.5s );
    top     : 0;
    width   : 100%;
    height  : 100%;
}
.mp-pusher::after,
.mp-level::after,
.mp-level::before {
    position: absolute;
    top     : 0;
    right   : 0;
    width   : 0;
    height  : 0;
    content : '';
    opacity : 0;
}

.mp-pusher::after,
.mp-level::after {
    @include transition( opacity 0.3s, width 0.1s 0.3s, height 0.1s 0.3s );
    background: rgba( 0, 0, 0, 0.3 );
}

.mp-pushed::after,
.mp-level.mp-level-overlay::after {
    @include transition( opacity 0.3s );
    width  : 100%;
    height : 100%;
    opacity: 1;
}


/* Fallback example for browsers that don't support 3D transforms (and no JS fallback) */
/* We'll show the first level only */
.no-csstransforms3d .mp-pusher,
.no-js .mp-pusher {
    padding-left: 300px;
}

.no-csstransforms3d .mp-pusher .mp-level,
.no-js .mp-pusher .mp-level {
    display: none;
}

.no-csstransforms3d .mp-pusher > .mp-level,
.no-js .mp-pusher > .mp-level {
    display: block;
}
}